# Generated by Django 5.1.5 on 2025-01-29 17:14

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import study.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('edit', models.DateTimeField(auto_now=True, verbose_name='Время последнего редактирования')),
                ('is_published', models.BooleanField(help_text='Нужно ли опубликовать данный пост?', verbose_name='Публикация')),
                ('is_on_main', models.BooleanField(help_text='Отметьте, отображается ли публикация на главной странице', verbose_name='Отметьте, отображается ли публикация на главной странице')),
                ('name', models.CharField(help_text='Введите название', max_length=128, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Введите название', null=True, verbose_name='Описание')),
                ('slug', models.SlugField(help_text='Введите короткое обозначение', max_length=32, unique=True, verbose_name='Короткое обозначение')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name', 'created'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Придумайте уникальный юзернейм', max_length=128, unique=True, validators=[study.validators.username_validator], verbose_name='Юзернейм')),
                ('email', models.EmailField(help_text='Введите уникальный адрес электронной почты', max_length=256, unique=True, verbose_name='Адрес электронной почты')),
                ('first_name', models.CharField(help_text='Введите ваше имя', max_length=64, verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Введите вашу фамилия', max_length=64, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, help_text='Введите ваше отчество или оставьте поле пустым', max_length=64, null=True, verbose_name='Отчество')),
                ('status', models.CharField(choices=[('teacher', 'Преподаватель'), ('student', 'Студент')], help_text="Выберете ваш статус: ['Преподаватель', 'Студент']", max_length=128, verbose_name='Статус')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['username', 'last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('edit', models.DateTimeField(auto_now=True, verbose_name='Время последнего редактирования')),
                ('is_published', models.BooleanField(help_text='Нужно ли опубликовать данный пост?', verbose_name='Публикация')),
                ('is_on_main', models.BooleanField(help_text='Отметьте, отображается ли публикация на главной странице', verbose_name='Отметьте, отображается ли публикация на главной странице')),
                ('name', models.CharField(help_text='Введите название', max_length=128, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Введите название', null=True, verbose_name='Описание')),
                ('slug', models.SlugField(help_text='Введите короткое обозначение', max_length=32, unique=True, verbose_name='Короткое обозначение')),
                ('image', models.ImageField(blank=True, help_text='Загрузите изображение', upload_to='study_images', verbose_name='Фото')),
                ('author', models.ForeignKey(help_text='Укажите автора курса', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, help_text='Укажите, к какой категории относится курс', null=True, on_delete=django.db.models.deletion.CASCADE, to='study.category')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['name', 'created'],
                'default_related_name': 'studies',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('edit', models.DateTimeField(auto_now=True, verbose_name='Время последнего редактирования')),
                ('text', models.TextField(help_text='Оцените работу преподавателей, качество учебных материалов!', verbose_name='Текст отзыва')),
                ('mark', models.IntegerField(help_text='Укажите оценку, на которую вы можете оценить данный курс', validators=[study.validators.mark_range], verbose_name='Оценка')),
                ('image', models.ImageField(blank=True, help_text='Оставьте фото, связанное с прохождением курса!', upload_to='review_images', verbose_name='Изображение')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор отзыва')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.study', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created'],
                'abstract': False,
                'default_related_name': '%(class)ss',
            },
        ),
    ]
